load_file("adex.hoc")
//load_file("jitter.hoc")
mfnum=4
objref mfgrc

mfgrc= new List()
//for i=0,mfnum-1{
	mfgrc.append(new NetCon(Mossy[0],grclist.object(0).grcadex,-20,0.000,1e-03))
	mfgrc.append(new NetCon(Mossy[1],grclist.object(0).grcadex,-20,0.000,1e-03))
	mfgrc.append(new NetCon(Mossy[2],grclist.object(0).grcadex,-20,0.000,1e-03))
	mfgrc.append(new NetCon(Mossy[3],grclist.object(0).grcadex,-20,0.000,1e-03))
//}

tstop=1000
objref cvode,g1
cvode=new CVode()
cvode.atol(0.001)
cvode_active(1)
cvode.use_local_dt(1)
cvode.use_daspk(1)
newPlotV()
g1=graphItem
g1.size(0,tstop,-100,50)
g1.erase_all
g1.addvar("grclist.object(0).grcadex.vv",2,2)

dt=0.025
if (mfnum==1) {
	grclist.object(0).grcadex.C=5
	grclist.object(0).grcadex.gmax=7.78
	grclist.object(0).grcadex.talp=2.45
}else if (mfnum==2) {
	grclist.object(0).grcadex.C=15
	grclist.object(0).grcadex.gmax=7.78
	grclist.object(0).grcadex.talp=2.48
}else if (mfnum==3) {
	grclist.object(0).grcadex.C=204
	grclist.object(0).grcadex.gmax=7.78
	grclist.object(0).grcadex.talp=2.67
}else if (mfnum==4) {
	grclist.object(0).grcadex.C=500
	grclist.object(0).grcadex.gmax=7.78
	grclist.object(0).grcadex.talp=2.78
}

//LFP calculations**************************************
objref vec,file,f,lfmf1,tvec
f=new File()
tvec= new Vector()
vec=new Vector()	
objref lf
lf=new File()
lfmf1=new File()
lfmf1.wopen("nettrace.dat")
lf.wopen("lfp_trace.dat")
proc lfpcalc(){
	
	//seting electrode position
	elec_x= -100
	elec_y=50
	elec_z=0
	x=10
	y=2
	z=0
	areaa=452.38
	sigma= 0.3
	if(elec_x==elec_y==elec_z==0){
		elec_z=1
	}
	dis= sqrt(((elec_x-x)*(elec_x-x))+((elec_y-y)*(elec_y-	y))+((elec_z-z)*(elec_z-z)))
	printf("distance between cell and electrde %f\n",dis)
	if(dis<(diam/2)){
		dis=(diam/2)
	}
	point_p= (1 / (4 * 3.141 * dis * sigma)) *areaa
	printf("value of pointpart is%f\n",point_p)
	for i=0,vec.size()-1{
		lfp1=vec.x[i]*point_p*1e-01
		lf.printf("%f\n",lfp1)
	}
		//LFP from a network
	/*total_current=0
	for i=0,vec.size()-1{
		total_current= total_current+vec.x[i]
		total_current1=total_current+vec.x[i]
		total_current2=total_current1+vec.x[i]
		total_current3=total_current2+vec.x[i]
		total_current4=total_current3+vec.x[i]
		total_current5=total_current4+vec.x[i]
		total_current6=total_current5+vec.x[i]
		total_current7=total_current6+vec.x[i]
		total_current8=total_current7+vec.x[i]
		total_current9=total_current8+vec.x[i]
		total_current10=total_current9+vec.x[i]
		total_current11=total_current10+vec.x[i]
		total_current12=total_current11+vec.x[i]
		total_current13=total_current12+vec.x[i]
		total_current14=total_current13+vec.x[i]
		total_current15=total_current14+vec.x[i]
		total_current16=total_current15+vec.x[i]
		total_current17=total_current16+vec.x[i]
		total_current18=total_current17+vec.x[i]
		total_current19=total_current18+vec.x[i]
		total_current20=total_current19+vec.x[i]
		total_current21=total_current20+vec.x[i]
		total_current22=total_current21+vec.x[i]
		total_current23=total_current22+vec.x[i]
		total_current24=total_current23+vec.x[i]
		total_current25=total_current24+vec.x[i]
				


		
		//total_cmf1=0.05*total_current25
		//total_cmf2=0.45*total_current25
		//total_cmf3=0.35*total_current25
		
			total_cmf4=0.15*total_current25

			total_cmf1=total_cmf1*-1
			//total_cmf4=total_current25*-1
			//lfpmf1=total_cmf4*point_p*1e-01
			lfpmf1=total_cmf4*-1

			lfmf1.printf("%f\n",lfpmf1)*/
		

	
}

}

proc run1(){	
		vec.record(&grc[0].grcadex.transmembranecurrent)
	printf("sizeoriginal%f\n",vec.size())
			f.wopen("hi.dat")
		for i=0,vec.size()-1{
			f.printf("%f\n",vec.x[i])
		
	}
	lfpcalc()
run()
}
f.close()
//lfmf1.close()

run1()



